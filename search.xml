<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>跨域请求</title>
      <link href="/2020/04/15/kua-yu-qing-qiu/"/>
      <url>/2020/04/15/kua-yu-qing-qiu/</url>
      
        <content type="html"><![CDATA[<h2 id="一、后端处理"><a href="#一、后端处理" class="headerlink" title="一、后端处理"></a>一、后端处理</h2><pre><code>public HttpServletResponse getResponse(Map&lt;String,Object&gt; map) throws IOException {        if (null == response) {            String respBody = JSON.toJSONString(map);            response = ServletActionContext.getResponse();            response.setContentType(SystemContext.ACTION_CONTENT_TYPE);            response.setHeader(&quot;Access-Control-Allow-Origin&quot;, &quot;*&quot;);            response.setHeader(&quot;Cache-Control&quot;, &quot;no-cache&quot;);            response.addHeader(&quot;Access-Control-Allow-Meaders&quot;,&quot;POST&quot;);//请求格式            response.addHeader(&quot;Access-Control-Allow-Headers&quot;,&quot;x-requested-with,content-type&quot;);//响应头            //PrintWriter out = response.getWriter();//输出流            //out.print(respBody);            //out.flush();            //out.close();        }        return response;    }</code></pre><h2 id="二、调用方法"><a href="#二、调用方法" class="headerlink" title="二、调用方法"></a>二、调用方法</h2><pre><code>data = JsonBean.success(&quot;suceess&quot;,pageResult);BaseAction base = new BaseAction();base.getResponse(data);</code></pre>]]></content>
      
      
      <categories>
          
          <category> 常用方法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 前端 </tag>
            
            <tag> 跨域请求 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>图片上传</title>
      <link href="/2020/04/15/tu-pian-shang-chuan/"/>
      <url>/2020/04/15/tu-pian-shang-chuan/</url>
      
        <content type="html"><![CDATA[<h2 id="一、在form中写入属性enctype-“multipart-form-data”"><a href="#一、在form中写入属性enctype-“multipart-form-data”" class="headerlink" title="一、在form中写入属性enctype = “multipart/form-data”"></a>一、在form中写入属性enctype = “multipart/form-data”</h2><h4 id="1-用以设置表单的MIME编码，默认情况，这个编码格式是application-x-www-form-urlencoded，不能用于文件上传；只有使用了multipart-form-data，才能完整的传递文件数据，完成图片的上传。"><a href="#1-用以设置表单的MIME编码，默认情况，这个编码格式是application-x-www-form-urlencoded，不能用于文件上传；只有使用了multipart-form-data，才能完整的传递文件数据，完成图片的上传。" class="headerlink" title="1.用以设置表单的MIME编码，默认情况，这个编码格式是application/x-www-form-urlencoded，不能用于文件上传；只有使用了multipart/form-data，才能完整的传递文件数据，完成图片的上传。"></a>1.用以设置表单的<a href="https://www.baidu.com/s?wd=MIME&tn=44039180_cpr&fenlei=mv6quAkxTZn0IZRqIHckPjm4nH00T1dBPWKWuhRvPynsnHubnARk0ZwV5Hcvrjm3rH6sPfKWUMw85HfYnjn4nH6sgvPsT6KdThsqpZwYTjCEQLGCpyw9Uz4Bmy-bIi4WUvYETgN-TLwGUv3EPHTknW01r0" target="_blank" rel="noopener">MIME</a>编码，默认情况，这个编码格式是application/x-www-form-urlencoded，不能用于文件上传；只有使用了multipart/form-data，才能完整的传递文件数据，完成图片的上传。</h4><pre><code>&lt;form id=&quot;showDataForm&quot; class=&quot;layui-form&quot; enctype=&quot;multipart/form-data&quot; onsubmit=&quot;return PostData()&quot;&gt;</code></pre><h2 id="二、用ajax提交"><a href="#二、用ajax提交" class="headerlink" title="二、用ajax提交"></a>二、用ajax提交</h2><pre><code>$.ajax({                type: &quot;POST&quot;,                url: &#39;&#39;,                data: formData,                timeout: 6000,                async: false,                cache: false,                contentType: false,                processData: false,                success: function (msg) {                    setTimeout(function () {                        $(&quot;#scbtn&quot;).attr(&quot;disabled&quot;, false);//将提交按钮解除为可点击                        layer.msg(&#39;提交成功&#39;, {                            time: 1000                        }, function () {                            window.location.href = &quot;xx.html&quot;;                        });                    },1000);                },                error: function (msg) {                    layer.msg(&#39;提交超时，请检查您的网络连接！&#39;);                    $(&quot;#scbtn&quot;).attr(&quot;disabled&quot;, false);                }            });            return false;</code></pre><h2 id="3、后台接收代码"><a href="#3、后台接收代码" class="headerlink" title="3、后台接收代码"></a>3、后台接收代码</h2><pre><code>private File file;//与前端name一致private String fileFileName;//接收的名字    public File getFile() {        return file;    }    public void setFile(File file) {        this.file = file;    }    public String getFileFileName() {        return fileFileName;    }    public void setFileFileName(String fileFileName) {        this.fileFileName = fileFileName;    }</code></pre><pre><code>    public static int getSecondTimestamp(Date date){//将上传的图片名字改为yy-mm-dd格式        if (null == date) {            return 0;        }        String timestamp = String.valueOf(date.getTime());        int length = timestamp.length();        if (length &gt; 3) {            return Integer.valueOf(timestamp.substring(0,length-3));        } else {            return 0;        }    }</code></pre><pre><code>    public String add() throws Exception {        Date date=new Date();        if(file != null){            String path = ServletActionContext.getServletContext().getRealPath(&quot;/upload&quot;);//服务器项目根路径            File filePath = new File(path);            if(!filePath.exists()){                filePath.mkdir();            }            String format = fileFileName.split(&quot;\\.&quot;)[1];            File diskFile = new File(path + File.separator                    + String.valueOf(getSecondTimestamp(date))+&quot;.&quot;+format);            FileUtils.copyFile(file, diskFile);            casCase.setFurImage(String.valueOf(getSecondTimestamp(date))+&quot;.&quot;+format);//图片名字        }    }</code></pre>]]></content>
      
      
      <categories>
          
          <category> 常用方法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 上传 </tag>
            
            <tag> 前端 </tag>
            
            <tag> 后端 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>二进制转化</title>
      <link href="/2020/04/15/er-jin-zhi-zhuan-hua/"/>
      <url>/2020/04/15/er-jin-zhi-zhuan-hua/</url>
      
        <content type="html"><![CDATA[<h2 id="一、网页代码"><a href="#一、网页代码" class="headerlink" title="一、网页代码"></a>一、网页代码</h2><pre><code>&lt;input type=&quot;file&quot; name=&quot;&quot; id=&quot;&quot; onchange=&quot;tobin(this)&quot; value=&quot;&quot;&gt;&lt;img src=&quot;&quot; id=&quot;you&quot; width=&quot;320px&quot;&gt;&lt;div style=&quot;position: absolute;z-index: -1;width: 0px;height: 0px;overflow: hidden;&quot;&gt;    &lt;canvas id=&quot;can&quot; width=&quot;320px&quot; height=&quot;240px&quot;&gt;&lt;/canvas&gt;&lt;/div&gt;</code></pre><h2 id="二、js代码"><a href="#二、js代码" class="headerlink" title="二、js代码"></a>二、js代码</h2><pre><code>function tobin(target) {    //获取临时缓存图片的路径，并传递给“显示图片”    var url = window.URL.createObjectURL(target.files.item(0));    //制造一张图片，传入画布，让它在画布中画出来。    var img1 = new Image();    img1.src = url;    //初始化捕捉元素    var can = document.getElementById(&#39;can&#39;);    //var you = document.getElementById(&#39;you&#39;);    var context = can.getContext(&quot;2d&quot;);    //当图片制造完成后，执行函数    img1.onload = function() {        //因为canvas输出的二进制图片会根据当前canvas的大小而变形，所以要将图片原始尺寸取出，然后传递给canvas,这样就能保证输出的图片原始比例不变        var nw = img1.naturalWidth;        var nh = img1.naturalHeight;        can.setAttribute(&#39;width&#39;, nw + &#39;px&#39;)        can.setAttribute(&#39;height&#39;, nh + &#39;px&#39;)        //图片原始比例        console.log(nw, nh);        //绘制进canvas        context.drawImage(img1, 0, 0, nw, nh);        //二进制流转化函数        var bin = can.toDataURL(&quot;image/jpeg&quot;); //bin值已经存放了二进制流        //二进制流传入“显示图片”        you.src = bin;    }}</code></pre>]]></content>
      
      
      <categories>
          
          <category> 常用方法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> base6 </tag>
            
            <tag> 图片二进制 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>mysql安装</title>
      <link href="/2020/03/30/mysql-an-zhuang/"/>
      <url>/2020/03/30/mysql-an-zhuang/</url>
      
        <content type="html"><![CDATA[<h2 id="一、创建my-ini文件"><a href="#一、创建my-ini文件" class="headerlink" title="一、创建my.ini文件"></a>一、创建my.ini文件</h2><h4 id="1-在解压的根目录创建my-ini文件，并放入下面代码"><a href="#1-在解压的根目录创建my-ini文件，并放入下面代码" class="headerlink" title="1.在解压的根目录创建my.ini文件，并放入下面代码"></a>1.在解压的根目录创建my.ini文件，并放入下面代码</h4><pre><code># 设置mysql客户端默认字符集default-character-set=utf8[mysqld]# 设置3306端口port=3306# 设置mysql的安装目录basedir=D:\mysql-8.0.13-winx64# 设置mysql数据库的数据的存放目录datadir=D:\mysql-8.0.13-winx64\data# 允许最大连接数max_connections=200# 服务端使用的字符集默认为8比特编码的latin1字符集character-set-server=utf8# 创建新表时将使用的默认存储引擎default-storage-engine=INNODB# 默认使用“mysql_native_password”插件认证default_authentication_plugin=mysql_native_password</code></pre><h2 id="二、执行安装"><a href="#二、执行安装" class="headerlink" title="二、执行安装"></a>二、执行安装</h2><h4 id="1-进入解压的跟目录，管理员执行，当根目录有新增文件则表明成功"><a href="#1-进入解压的跟目录，管理员执行，当根目录有新增文件则表明成功" class="headerlink" title="1.进入解压的跟目录，管理员执行，当根目录有新增文件则表明成功"></a>1.进入解压的跟目录，管理员执行，当根目录有新增文件则表明成功</h4><pre><code>bin\mysqld --installbin\mysqld --initialize-insecure</code></pre><h4 id="2-重启cmd，一定要重启，并启动服务"><a href="#2-重启cmd，一定要重启，并启动服务" class="headerlink" title="2.重启cmd，一定要重启，并启动服务"></a>2.重启cmd，一定要重启，并启动服务</h4><pre><code>net start mysql</code></pre><h4 id="3-启动服务后，输入"><a href="#3-启动服务后，输入" class="headerlink" title="3.启动服务后，输入"></a>3.启动服务后，输入</h4><pre><code>mysql -uroot -p</code></pre><p>初次安装密码为空，直接回车即可</p><h4 id="4-常用代码"><a href="#4-常用代码" class="headerlink" title="4.常用代码"></a>4.常用代码</h4><pre><code>mysqld --initialize --console//查看原始密码一般为0或空 ALTER USER &#39;root&#39;@&#39;localhost&#39; IDENTIFIED WITH mysql_native_password BY &#39;你的密码&#39;;  //修改密码</code></pre>]]></content>
      
      
      <categories>
          
          <category> 软件安装 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> mysql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vue脚手架安装</title>
      <link href="/2020/03/25/vue-jiao-shou-jia-an-zhuang/"/>
      <url>/2020/03/25/vue-jiao-shou-jia-an-zhuang/</url>
      
        <content type="html"><![CDATA[<h1 id="vue脚手架安装及路径修改"><a href="#vue脚手架安装及路径修改" class="headerlink" title="vue脚手架安装及路径修改"></a>vue脚手架安装及路径修改</h1><h3 id="一、安装node-js"><a href="#一、安装node-js" class="headerlink" title="一、安装node.js"></a>一、安装node.js</h3><p>例如我的安装路径为：D:\tool\nodejs；</p><p>node -v    检查当前node的版本；</p><p>npm -v    检查当前npm的版本;</p><p>有版本信息输出则为安装成功。</p><h3 id="二、修改node-global和node-cache资源路径"><a href="#二、修改node-global和node-cache资源路径" class="headerlink" title="二、修改node_global和node_cache资源路径"></a>二、修改node_global和node_cache资源路径</h3><p>修改node_global和node_cache资源路径的目的是防止默认安装在C盘,分别执行以下代码</p><pre><code>npm config set prefix &quot;D:\tool\nodejs\node_global&quot;npm config set cache &quot;D:\tool\nodejs\node_cache&quot;</code></pre><h3 id="三、安装淘宝镜像"><a href="#三、安装淘宝镜像" class="headerlink" title="三、安装淘宝镜像"></a>三、安装淘宝镜像</h3><p>默认下载路径比较慢，安装淘宝镜像可加快下载速度，运行以下代码</p><pre><code>npm install -g cnpm --registry=https://registry.npm.taobao.org</code></pre><p>安装成功后输入 npm config list 查询已安装信息，npm config get registry 检查一下镜像站是否切换为淘宝镜像命令，部分人安装后却发现镜像并未更改，这时候需要修改C:\Users\Administrator.npmrc目录的文件以永久使用淘宝镜像，在文件中添加</p><pre><code>registry=http://registry.npm.taobao.org</code></pre><h3 id="四、全局安装vue脚手架"><a href="#四、全局安装vue脚手架" class="headerlink" title="四、全局安装vue脚手架"></a>四、全局安装vue脚手架</h3><p>分别执行以下代码，webpack为打包</p><pre><code>npm install -g @vue/cli//全局安装脚手架npm i webpack@3.12.0 -g//全局安装webpage3.12.0稳定版</code></pre><p>有部分人安装可能会出现错误，可能是由于npm版本过低，解决方法执行</p><pre><code>npm install npm -g//检查npm安装或更新命令（可不操作）</code></pre><p>更新成功后再执行上面代码</p><h3 id="五、配置环境变量"><a href="#五、配置环境变量" class="headerlink" title="五、配置环境变量"></a>五、配置环境变量</h3><p>1.重启cmd，一定要重启，不然看不到版本信息，反正我安装后是这样；</p><p>2.当执行前面操作后vue脚手架已安装成功，下面是版本或帮助信息</p><pre><code>vue   ## 查看 vue 相关帮助信息vue --version 或 vue -V  ## 查看安装的 vue cli 版本信息</code></pre><p>3、执行后有版本信息输出则说明vue脚手架安装成功，到这里有些人会遇到不是内部或外部命令，也不是可运行的程序或批处理文件的提示，这是因为你已经把node_global和node_cache资源路径修改到了D盘，默认为C盘当然会提示不是指令啦，解决方法</p><pre><code>D:\tool\nodejs\node_global//在电脑环境变量的path下新加D:\tool\nodejs\node_global\node_modules//新建NODE_PATH加入</code></pre><p>4、在执行重新执行你会发现已经成功了！</p>]]></content>
      
      
      <categories>
          
          <category> 软件安装 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>office安装</title>
      <link href="/2020/03/25/office-an-zhuang/"/>
      <url>/2020/03/25/office-an-zhuang/</url>
      
        <content type="html"><![CDATA[<h1 id="解决office自定义安装问题"><a href="#解决office自定义安装问题" class="headerlink" title="解决office自定义安装问题"></a>解决office自定义安装问题</h1><p>当我们需要安装office时，office默认会帮我们安装其所有功能，比如Access、OneNote等，但我们有时只想安装其中的Word、Excel、PowerPoint，那需要怎么做呢？</p><h3 id="一、安装DAEMON-Tools-Lite"><a href="#一、安装DAEMON-Tools-Lite" class="headerlink" title="一、安装DAEMON Tools Lite"></a>一、安装DAEMON Tools Lite</h3><p><a href="https://daemon-tools-lite.en.softonic.com/download" target="_blank" rel="noopener">daemon tools</a>是一个的虚拟光驱工具，当安装office时会用到，安装完成后将office加载进来，比如我加载后的盘符为G盘。</p><h3 id="二、安装微软官方管理器office-deployment-tool"><a href="#二、安装微软官方管理器office-deployment-tool" class="headerlink" title="二、安装微软官方管理器office deployment tool"></a>二、安装微软官方管理器office deployment tool</h3><p>下载 <a href="https://www.microsoft.com/en-us/download/confirmation.aspx?id=49117" target="_blank" rel="noopener">Office 部署工具</a>后，双击 Officedeploymenttool 执行 (.exe) 文件以解压缩 ODT  文件。完成后，解压到的文件夹中应该有多个文件： setup.exe 和一些示例 configuration.xml  文件，而我们真正需要的是configuration-Office365-x64.xml这个文件。</p><h3 id="三、修改configuration-Office365-x64-xml文件"><a href="#三、修改configuration-Office365-x64-xml文件" class="headerlink" title="三、修改configuration-Office365-x64.xml文件"></a>三、修改configuration-Office365-x64.xml文件</h3><pre><code>&lt;Configuration&gt;  &lt;Add SourcePath=&quot;G:\&quot; OfficeClientEdition=&quot;64&quot; &gt;  //G为虚拟镜像位置,daemon tools加载office的盘符    &lt;Product ID=&quot;ProPlusRetail&quot;&gt;        &lt;Language ID=&quot;zh-CN&quot; /&gt;//选择语言        &lt;ExcludeApp ID=&quot;Access&quot; /&gt;        &lt;ExcludeApp ID=&quot;Groove&quot; /&gt;        &lt;ExcludeApp ID=&quot;InfoPath&quot; /&gt;        &lt;ExcludeApp ID=&quot;Lync&quot; /&gt;        &lt;ExcludeApp ID=&quot;OneNote&quot; /&gt;        &lt;ExcludeApp ID=&quot;Outlook&quot; /&gt;        &lt;ExcludeApp ID=&quot;Publisher&quot; /&gt;        &lt;ExcludeApp ID=&quot;SharePointDesigner&quot; /&gt;    &lt;/Product&gt;  &lt;/Add&gt;  &lt;/Configuration&gt;</code></pre><h3 id="四、运行"><a href="#四、运行" class="headerlink" title="四、运行"></a>四、运行</h3><p>启动管理员cmd（进入 office deployment tool的解压路径），输入</p><pre><code>setup.exe /configure configuration-Office365-x64.xml</code></pre><p>等待office安装完成就可以了。</p>]]></content>
      
      
      <categories>
          
          <category> 软件安装 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> office </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
